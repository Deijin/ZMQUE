{
  "name": "ZMQUE",
  "tagline": "ZMQ for Unreal Engine 4 -- Quick & Dirty",
  "body": "\r\nThis project was built during a rapid prototyping push, so it exists as\r\na quick-and-dirty interface. There was no thought to efficiency or\r\nelegance. There are just pass-through functions and the minimum that\r\nis required to call every zmq function in the library.\r\n\r\nThis is not completely tested. Only the basic calls are in use.\r\n\r\nThis project and its contents are provided without warranty and support\r\nwill not be provided. This project and its contents exist within the\r\npublic domain. Any derivations or use cases can attribute the author\r\nand this Git repository at the discretion of their owners, but any\r\nacknowledgement is appreciated.\r\n\r\nThis Git will be maintained, albeit minimally, and others are welcome\r\nto help improve this code base.\r\n\r\n\r\nNOTES:\r\n\r\nThe source and a pre-built version are provided. Games using the ZMQUE\r\nmodule will only be able to compile for Windows (or anything that can\r\nhandle \"Win64\").\r\n\r\nThe project is for Visual Studio 2015.\r\n\r\nI forget which ZMQ version I used. I think it's either 4.1.4 or 4.0.4\r\nbut it is very easy to replace what is there now. Also, I am using the\r\nDLL version of ZMQ. That adds extra work placing the DLL where it needs\r\nto be. I plan on changing to full-static so I will update this Git at\r\nsome point--if it hasn't been done by another already.\r\n\r\nThe biggest hurdle was the fact that UE4 and ZMQ treat \"short\" in two\r\ndifferent ways. As with the poll item struct, it is important that any\r\nother instances of data passing also take this difference into\r\nconsideration. Make sure you are explicit about the \"sizeof\" the data\r\nyour game passes to or gets from ZMQ.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}